basePath: /api/v4
definitions:
  execBuyError:
    properties:
      code:
        type: integer
        description: error code generated when trying to perform the request
        example: 4
      message:
        description: Error message generated when trying to perform the request
        type: string
        example: "Internal Server Error (quotes_buy_not_found)"
    type: object
  execSellError:
    properties:
      code:
        type: integer
        description: error code generated when trying to perform the request
        example: 4
      message:
        description: Error message generated when trying to perform the request
        type: string
        example: "Internal Server Error (quotes_sell_not_found)"
    type: object
  httputil.HTTPError:
    properties:
      code:
        type: integer
        description: error code generated when trying to perform the request
        example: 4
      message:
        description: Error message generated when trying to perform the request
        type: string
        example: "Internal Server Error (error when searching for quotation: LTC)"
    type: object
  QuoteFiatRequestSchema:
    properties:
      coin:
        type: string
        description: Symbol of the cryptocurrency to be quoted
        example: LTC
      fiat_amount:
        type: string
        description: Amount of fiat currency BRL to quote
        example: "18810"
      source:
        type: string
        description: Request source (web/ios/android)
        example: web
    required:
    - coin
    - fiat_amount
    - source
    type: object
  ExecRequestSchema:
    properties:
      coin:
        type: string
        description: Symbol of the cryptocurrency 
        example: LTC
      source:
        type: string
        description: Request source (web/ios/android)
        example: web
    required:
    - coin
    - source
    type: object
  QuoteCryptoRequestSchema:
    properties:
      coin:
        type: string
        description: Symbol of the cryptocurrency to be quoted 
        example: LTC
      crypto_amount:
        type: string
        description: Amount of cryptocurrency to quote
        example: "100"
      source:
        type: string
        description: Request source (web/ios/android)
        example: web
    required:
    - coin
    - source
    - crypto_amount
    type: object
  OrderExecResponse:
    properties:
      orderId:
        description: Order identifier
        type: string
        example: 01GCM0B3XR2R4CBBA37MFQ8QZK
    type: object
  QuoteBuyResponseSchema:
    properties:
      id:
        type: integer
        description: Quotation record identifier
        example: 33
      coin:
        type: string
        description: Symbol of the quoted cryptocurrency
        example: "LTC"
      coin_price:
        type: string
        description: Cryptocurrency unit value against fiat BRL
        example: "102.04081632"
      fiat_amount:
        type: string
        description: Amount quoted of fiat currency BRL
        example: "100"
      fee_fiat_amount:
        type: string
        description: Fee amount in fiat BRL over the quoted amount
        example: "0.99"
      fiat_amount_with_fee:
        type: string
        description: Amount in fiat BRL already taxed
        example: "99.01"
      estimated_coin_amount:
        type: string
        description: Estimated value in conversion from fiat BRL to the specified cryptocurrency
        example: "0.970298"
    type: object
  QuoteSellResponseSchema:
    properties:
      id:
        type: integer
        description: Quotation record identifier
        example: 33
      coin:
        type: string
        description: Symbol of the quoted cryptocurrency
        example: "LTC"
      coin_price:
        type: string
        description: Cryptocurrency unit value against fiat BRL
        example: "102.04081632"
      crypto_amount:
        type: string
        description: Quoted amount of cryptocurrency
        example: "100"
      fee_crypto_amount:
        type: string
        description: Fee value in cryptocurrency on the quoted amount
        example: "0.7"
      crypto_amount_with_fee:
        type: string
        description: Amount in cryptocurrency already taxed
        example: "99.3"
      fiat_amount": 
        type: string
        description: Amount in fiat BRL over the amount of quoted cryptocurrency
        example: ""
      fee_fiat_amount": 
        type: string
        description: Fee amount in fiat currency
        example: ""
      fiat_amount_with_fee": 
        type: string
        description: Amount of fiat currency BRL already taxed
        example: ""
      estimated_fiat_amount": 
        type: string
        description: Estimated value of conversion in fiat BRL
        example: "18810"
    type: object
  QuoteSellBrlResponseSchema:
    properties:
      id:
        type: integer
        description: Quotation record identifier
        example: 33
      coin:
        type: string
        description: Symbol of the quoted cryptocurrency
        example: "LTC"
      coin_price:
        type: string
        description: Cryptocurrency unit value against fiat BRL
        example: "102.04081632"
      crypto_amount:
        type: string
        description: Amount of cryptocurrency equivalent to the amount of quoted fiat currency
        example: "100"
      fee_crypto_amount:
        type: string
        description: Fee value in cryptocurrency on the quoted amount
        example: "0.7"
      crypto_amount_with_fee:
        type: string
        description: Amount in cryptocurrency already taxed
        example: "99.3"
      fiat_amount": 
        type: string
        description: Amount of fiat currency equivalent to the amount of quoted cryptocurrency
        example: "18810"
      fee_fiat_amount": 
        type: string
        description: Fee amount in fiat currency
        example: "131.67"
      fiat_amount_with_fee": 
        type: string
        description: Amount of fiat currency BRL already taxed
        example: "18678.3"
      estimated_fiat_amount": 
        type: string
        description: Estimated value of conversion in fiat BRL
        example: "18810"
    type: object
info:
  contact:
    email: contato@mercadobitcoin.com.br
    name: API Support
    url: https://suporte.mercadobitcoin.com.br
  description: |-
    # Overview

    Service responsible for applying dynamic fee and spreed rates by user
    groups on buy-side and sell-side market order quotes for customers using the simplified
    retail experience.

    Before using Mercado Bitcoin's APIs, plase consult [here](https://www.mercadobitcoin.com.br/termo-de-uso-apis) the provisions of the API's Terms of Service.
    ### Endpoint
    All requests is made with `/api/v4` context.

    ### WebSocket API
    If you are looking for WebSocket API documentation [click here](https://ws.mercadobitcoin.net/docs/v0)

    # Errors

    ### Domain error examples

    Our errors will have a pattern on every invalid request return

    In them you will identify a mapping of information that will tell you the location of the error and the specific error, as well as a description to better describe the error.

    `DOMAIN` = Error domain

    e.g: TRADING(Trading services)

    `MODULE` = Use case that is running

    e.g: GET_ORDER(search endpoint of order by id)

    `ERROR` = Specific error caused on request

    e.g: ORDER_NOT_FOUND(id used for search does not exist in our base)

    Response status code: `400`

    Response body payload
    ```json
    {
    "code": "TRADING|GET_ORDER|ORDER_NOT_FOUND",
    "message": "This order_id not found"
    }
    ```

    ### Possible errors return

    Error | Description
    ----------|-------------
    API_UNAVAILABLE | API temporarily disabled
    FORBIDDEN | Invalid login or password

    ### Forbidden error example

    Response status code: `403`

    Response body payload
    ```json
    {
    "code": "API|FORBIDDEN",
    "message": "You need to be authenticated"
    }
    ```

    ### Internal server error example

    Response status code: `500`

    Response body payload
    ```json
    {
    "code": "API|INTERNAL_SERVER_ERROR",
    "message": "An unexpected error has occurred"
    }
    ```

    # Authentication
    Authentication is based on the user-hash generated after user login authentication.
    All endpoints of this API use the user-hash parameter in their composition.

    ### Endpoint

    All requests is made with /api/v4 context:
    #### /api/v4/user/{user_hash}

  title: Caronte API
  version: 1.1.0
  x-logo:
    altText: MercadoBitcoin
    backgroundColor: '#FFFFFF'
    url: https://static.mercadobitcoin.com.br/web/img/logos/mb/main-logo-color.svg
paths:
  /user/{user_hash}/quote/buy:
    post:
      description: Purchase quote request for cryptocurrency and specified amount in fiat
        currency BRL.
        Generates a purchase quote and returns a json object with the cryptocurrency
        value, fees and quantity in proportion to the value specified in the request
        body.
      parameters:
      - description: Request template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/QuoteFiatRequestSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QuoteBuyResponseSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Quote Buy
      tags:
      - Buy

  /user/{user_hash}/quote/buy/exec:
    post:
      parameters:
      - description: Request template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ExecRequestSchema'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/OrderExecResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/execBuyError'
      summary: Exec Buy Order Pre-Trading
      tags:
      - Buy

  /user/{user_hash}/quote/sell:
    post:
      parameters:
      - description: Request template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/QuoteCryptoRequestSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QuoteSellResponseSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Quote Sell
      tags:
      - Sell

  /user/{user_hash}/quote/sell/brl:
    post:
      parameters:
      - description: Request template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/QuoteFiatRequestSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QuoteSellBrlResponseSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Quote Sell Fiat BRL
      tags:
      - Sell
  /user/{user_hash}/quote/sell/exec:
    post:
      parameters:
      - description: Request template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ExecRequestSchema'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/OrderExecResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/execSellError'
      summary: Exec Sell Order Pre-Trading
      tags:
      - Sell

swagger: "2.0"
